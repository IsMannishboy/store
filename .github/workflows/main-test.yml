name: main test  

on:
  push:
    branches: dev
    paths:
      - "app/**"
    
  

jobs:


  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: testiki
      run: |
        docker compose up --build -d
        echo "‚è≥ Waiting for containers to start..."
        sleep 5
        docker compose logs --tail=100
        services=($(docker ps -a --format "{{.Names}}"))
        echo "Services: ${services[@]}"

        for dir in ${services[@]}; do
          if [ "$dir" != "cash" ] && [ "$dir" != "store_nginx" ] && [ "$dir" != "mydb" ]; then
            echo "üïì Waiting for $dir to be healthy..."
            # –∂–¥—ë–º –ø–æ–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç –±—ã—Ç—å restarting
            for i in {1..30}; do
              state=$(docker inspect -f '{{.State.Status}}' "$dir")
              if [ "$state" = "running" ]; then
                echo "‚úÖ $dir is running"
                break
              else
                echo "‚è≥ $dir state: $state, waiting..."
                sleep 2
              fi
            done

            state=$(docker inspect -f '{{.State.Status}}' "$dir")
            if [ "$state" != "running" ]; then
              echo "‚ùå $dir is not running (state=$state), skipping tests"
              docker logs $dir

              continue
            fi

            echo "‚ñ∂Ô∏è Running tests in $dir..."
            docker exec "$dir" go test ./... || true
          fi
        done
